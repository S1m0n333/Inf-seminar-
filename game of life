import tkinter as tk
from tkinter import filedialog as fd
import numpy as np

win=tk.Tk()
WIDTH = 500
HEIGHT = 500
vs = 10 # velkost stvorceku
absvs = 10
cells = np.zeros((WIDTH//vs, HEIGHT//vs), dtype= "int")
cells_new = np.zeros((WIDTH//vs, HEIGHT//vs), dtype= "int")
print(cells)

def getnei(x,y):
    total = 0
    if x>0:
       total+=cells[x-1,y]
    if x>0 and y>0:
        total+=cells[x-1,y-1]
    if y>0:
        total += cells[x, y - 1]
    if x<(WIDTH//absvs -1) and y<(HEIGHT//absvs-1):
        total += cells[x+1, y + 1]
    if x>0 and y<(HEIGHT//absvs-1):
        total += cells[x - 1, y + 1]
    if y <(HEIGHT//absvs-1):
        total += cells[x,y+1]
    if x<(WIDTH//absvs-1):
        total+=cells[x+1,y]
    if y>0 and x<(WIDTH//absvs-1):
        total+=cells[x+1,y-1]
    return total

def recalculate():
    global cells,cells_new
    for y in range(0,HEIGHT//absvs):
        for x in range(WIDTH//absvs):
            temp = getnei(x,y)
            if (temp == 2 and cells[x, y] == 1) or (temp == 3 and cells[x, y] == 1):
                cells_new[x,y]= 1
            if temp ==3 and cells[x, y] == 0:
                cells_new[x,y]= 1
            if temp<2 or temp>3:
                cells_new[x,y]=0
    cells= cells_new
    canvas.delete("all")
    create_stage()
    redraw_cells()

def slider_change(e):
    global vs
    print(w.get())
    canvas.delete("all")
    vs = w.get()
    create_stage()
    redraw_cells()

def create_cell(e):
    global cells
    tx = e.x//vs
    ty = e.y //vs
    x = (tx)*vs
    y = (ty)*vs
    canvas.create_rectangle(x,y,x+vs,y+vs, fill = "black")

    cells[tx,ty] = 1
    print(getnei(tx,ty))

def redraw_cells():

    for x in range(WIDTH//vs):
        for y in range(HEIGHT//vs):
            if cells[x][y] ==1:
                canvas.create_rectangle(x*vs, y*vs, x*vs + vs, y*vs + vs, fill="black")
#prechadzam ccell a ak tam je jednotka vykreslim bunku  aprislusnom mieste

def create_stage():
    for x in range(WIDTH//vs):
        canvas.create_line(x*vs,0, x*vs, HEIGHT )
    for y in range(HEIGHT//vs):
        canvas.create_line(0,y*vs,WIDTH,y*vs)

def open_file():
    global cells, cells_new
    load = []
    filename = fd.askopenfilename()
    f = open(filename,"r")
    cells_new = cells.copy()
    for i in f:
        for j in i.split():
            load.append(j)
    counter = 0
    for i in load:
        for j in i:
            counter += 1
    if counter < 2500:
        for i in range(len(load)):
            for j in range(len(load[i])):

                if load[i][j] == "1":
                    cells_new[i, j] = 1
                else:
                    cells_new[i, j] = 0
        cells = cells_new.copy()
        canvas.delete("all")
        create_stage()
        redraw_cells()
    else:
        print("chyba")

def loopFunction():
    if button1.config('text')[-1] == 'New cells':
        recalculate()
        win.after(100, loopFunction)

def lifegame():
    if button1.config('text')[-1] == 'New life':
        button1.config(text='New cells')
        loopFunction()
    else:
        button1.config(text='New life')

canvas = tk.Canvas(width = WIDTH, height = HEIGHT, bg = "white")
create_stage()
canvas.pack()

button = tk.Button(win, text = "Next generation", command = recalculate)
button.pack(side= tk.LEFT)

button1 = tk.Button(win, text = "Otvor subor", command = open_file)
button1.pack(side = tk.RIGHT)

button1 = tk.Button(win, text = "No cells", command = lifegame)
button1.pack(side=tk.BOTTOM)

w = tk.Scale(win, from_=10, to=50, orient="horizontal", command = slider_change, length= 500)
w.pack()
canvas.bind("<Button-1>", create_cell)

win.mainloop()
